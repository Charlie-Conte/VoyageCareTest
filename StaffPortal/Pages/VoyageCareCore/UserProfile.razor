@page "/UserProfile"
@using StaffPortal.Pages.Account
@using Microsoft.AspNetCore.Identity
@using StaffPortal.Pages.Management.Admin
@inject UserManager<IdentityUser> UserManager
@inject IDialogService DialogService


<AuthorizeView>
    <Authorized Context="auth">
        <MudText Typo="Typo.h3">UserProfile</MudText>
        @if (_render)
        {
            <MudGrid>
                <MudItem xs="10">
                    <MudText Typo="Typo.h4">Hello @auth.User.Identity?.Name</MudText>
                </MudItem>
                <MudItem xs="2">
                    <MudButton OnClick="@(OpenEditDialog)" MudPallet Variant="Variant.Filled" Color="Color.Info">Edit User Login</MudButton>
                </MudItem>
            </MudGrid>

            <DynamicComponent Type="typeof(UserDetails)" Parameters="@UserDetailsParams" />
        }
        
        

    </Authorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    System.Security.Claims.ClaimsPrincipal CurrentUser;
    IdentityUser currentIdentityUser;

    Dictionary<string, object> UserDetailsParams = new Dictionary<string, object>();

    private bool _render;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        var claims = CurrentUser.Claims.ToList();
        var userId = claims
            .Find(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;
        currentIdentityUser = await UserManager.FindByIdAsync(userId);
        currentIdentityUser.PasswordHash = "*****";

        UserDetailsParams.Add("UserId", currentIdentityUser.Id);

        _render = true;
    }

    private void OpenEditDialog()
    {
        var dialogParameters = new DialogParameters();
        dialogParameters.Add("User", currentIdentityUser);
        dialogParameters.Add("DisableForm", false);
        DialogService.Show<DialogEditUser>("Editing " + currentIdentityUser.UserName,
            parameters: dialogParameters,
            options: new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = true });
    }

}